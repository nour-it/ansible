---
- name: Nginx | Ubuntu ppa
  when: ansible_distribution == 'Ubuntu'
  apt_repository:
    repo: ppa:nginx/stable
    state: present
- name: Nginx | GPG Key
  when: ansible_distribution == 'Debian'
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key
- name: Nginx | Debian repository
  when: ansible_distribution == 'Debian'
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - deb https://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx
    - deb-src https://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx
- name: Nginx | Install
  apt:
    name: nginx
    state: present
- name: Nginx | création de /etc/nginx/sites-enabled
  file: state=directory path=/etc/nginx/sites-enabled
- name: Nginx | création de /etc/nginx/sites-available
  file: state=directory path=/etc/nginx/sites-available
- name: Nginx | Default vhost
  template:
    src: default.j2
    dest: "/etc/nginx/sites-available/default"
- name: Nginx | création de /etc/nginx/nginxconfig.io
  file: state=directory path=/etc/nginx/nginxconfig.io
- name: Nginx | nginx.conf
  template:
    src: "{{ item }}.j2"
    dest: "/etc/nginx/{{ item }}"
  loop:
    - nginx.conf
    - nginxconfig.io/general.conf
    - nginxconfig.io/letsencrypt.conf
    - nginxconfig.io/security.conf
- name: Nginx | nginx.conf
  template:
    src: "{{ item }}.j2"
    dest: "/etc/nginx/{{ item }}"
  when: php_version is defined
  loop:
    - nginxconfig.io/php_fastcgi.conf
- name: "Nginx | Vhost {{ domain }}"
  template:
    src: vhost.j2
    dest: "/etc/nginx/sites-available/{{ domain }}"
  notify: nginx reload
- include_tasks: certificates.yml
- name: "Nginx | Vhost {{ domain }}"
  file:
    path: "/etc/nginx/sites-enabled/{{ domain }}"
    src: "/etc/nginx/sites-available/{{ domain }}"
    state: link
  notify: nginx reload
- include_tasks: letsencrypt.yml
  when: not self_signed
- name: "Nginx | Vhost {{ domain }}"
  template:
    src: vhost.j2
    dest: "/etc/nginx/sites-available/{{ domain }}"
  notify: nginx reload
- name: "Nginx | NginxReqLimit fail2ban filter"
  template:
    src: fail2ban/nginx-req-limit.conf.j2
    dest: /etc/fail2ban/filter.d/nginx-req-limit.conf
- name: "Nginx | fail2ban Jail"
  template:
    src: fail2ban/jail.local.j2
    dest: /etc/fail2ban/jail.local
  notify: fail2ban restart
