proxy_cache_path /var/run/nginx-cache/jscache levels=1:2 keys_zone=jscache:100m inactive=30d  use_temp_path=off max_size=100m;

# Disable logging for medias (resize/convert)
map $request $loggable {
    ~/media/* 0;
    default 1;
}

upstream gwsocket {
  server 127.0.0.1:7890;
}

server {
    listen                  443 ssl http2;
    listen                  [::]:443 ssl http2;
    server_name             {{ domain }};
    set                     $base {{ root_path }};
    root                    $base/public;

    # Page d'erreurs
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;

    # SSL
{% if self_signed %}
    ssl_certificate /etc/letsencrypt/dev/{{ domain }}.crt;
    ssl_certificate_key /etc/letsencrypt/dev/{{ domain }}.key;
{% else %}
    ssl_certificate         /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain }}/chain.pem;
{% endif %}

    # security
    include                 nginxconfig.io/security.conf;

    # logging
    access_log              {{ root_path }}/var/log/access.log combinedt if=$loggable;
    error_log               {{ root_path }}/var/log/error.log warn;

    # index.php
    index                   index.php;
{% if noindex is defined and noindex %}
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
{% endif %}

    # Mercure
    location /.well-known/mercure/ {
        proxy_pass http://localhost:3000/.well-known/mercure;
        proxy_read_timeout 24h;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        access_log    off;
    }

    # index.php fallback
    location / {
        limit_req zone=main burst=20 delay=10;
        try_files $uri $uri/index.html /index.php?$query_string;
    }

    location ~ ^/media/(convert|resize)/.*$ {
        expires    7d;
        access_log off;
        try_files $uri /index.php?$query_string;
    }

{% if false %}
    # Permet d'utiliser un proxy si PHP fonctionnait avec nginx, try_files $uri @php
    location @php {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
{% endif %}

    # Téléchargements des vidéos et sources
    location ~ ^/downloads/(?<path>.*)$ {
        auth_request     /index.php;
        auth_request_set $auth_status $upstream_status;
        alias $base/downloads/$path;
    }

    # GoAccess report
    location ~ ^/report.html$ {
        auth_request     /index.php;
        auth_request_set $auth_status $upstream_status;
	add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'";
    }

    location /goaccessws {
      auth_request     /index.php;
      auth_request_set $auth_status $upstream_status;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_pass http://gwsocket;
      proxy_buffering off;
      proxy_read_timeout 7d;
    }

    # Plausible
    location = /js/script.js {
        proxy_pass http://localhost:8001/js/plausible.js;
        proxy_buffering on;
        proxy_cache jscache;
        proxy_cache_valid 200 6h;
        proxy_cache_use_stale updating error timeout invalid_header http_500;
        add_header X-Cache $upstream_cache_status;
        proxy_set_header Host stats.{{ domain }};
        proxy_ssl_name stats.{{ domain }};
        proxy_ssl_server_name on;
        proxy_ssl_session_reuse off;
    }

    location = /api/event {
        proxy_pass http://localhost:8001/api/event;
        proxy_buffering on;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header Host stats.{{ domain }};
        proxy_ssl_name stats.{{ domain }};
        proxy_ssl_server_name on;
        proxy_ssl_session_reuse off;
    }

    # additional config
    include nginxconfig.io/general.conf;

    # handle .php
    location ~ ^/index\.php(/|$) {
{% if docker %}
        try_files                     $fastcgi_script_name =404;
        include                       fastcgi_params;
        fastcgi_pass                  127.0.0.1:9001;
        fastcgi_index                 index.php;
        fastcgi_buffers               8 16k;
        fastcgi_buffer_size           32k;
        fastcgi_param DOCUMENT_ROOT   /var/www/public;
        fastcgi_param SCRIPT_FILENAME /var/www/public$fastcgi_script_name;
        fastcgi_param PHP_ADMIN_VALUE "open_basedir=/var/www/:/usr/lib/php/:/tmp/";
{% else %}
        include nginxconfig.io/php_fastcgi.conf;
{% endif %}
        internal;
    }

    location ~ \.php$ {
      return 404;
    }
}

# subdomains redirect
server {
    listen                  443 ssl http2;
    listen                  [::]:443 ssl http2;
    server_name             *.{{ domain }};

    # SSL
{% if self_signed %}
    ssl_certificate /etc/letsencrypt/dev/{{ domain }}.crt;
    ssl_certificate_key /etc/letsencrypt/dev/{{ domain }}.key;
{% else %}
    ssl_certificate         /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain }}/chain.pem;
{% endif %}
    return                  301 https://{{ domain }}$request_uri;
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name .{{ domain }};
    include     nginxconfig.io/letsencrypt.conf;

    location / {
        return 301 https://{{ domain }}$request_uri;
    }
}
